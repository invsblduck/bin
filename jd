#!/bin/bash

# Compare two JSON files.

if [ -z "$2" -o "$#" != 2 ]; then
    cat >&2 <<__EOT__
usage: $0 <FILE_1> <FILE_2>

Print differences between two JSON files.
__EOT__
    exit 1
fi

set -e

keys1="$(mktemp)"
keys2="$(mktemp)"

TMP_FILES=(
    $keys1
    $keys2
    ${keys1}-uniq
    ${keys2}-uniq
    ${keys1}-common
    ${keys1}-diff
)
trap "rm -f ${TMP_FILES[*]}" EXIT

key_names() {
    jq keys <"$1" |cut -f2 -d'"' |egrep -v '^\[|\]$'
}

key_names "$1" >"${keys1}"
key_names "$2" >"${keys2}"

intersection() {
    local file_a="$1"
    local file_b="$2"
    local grep_flags="$3"

    unset GREP_OPTIONS
    /bin/grep ${grep_flags} -xFf "${file_a}" "${file_b}" || :
}

complement() {
    intersection "$1" "$2" -v
}

intersection "${keys1}" "${keys2}" >"${keys1}-common"
complement "${keys1}" "${keys2}" >"${keys2}-uniq"  # A's complement
complement "${keys2}" "${keys1}" >"${keys1}-uniq"  # B's complement

indent() {
    sed 's/^/  /' <"$1"
}

colorize() {
    local -A colors=(gray '01;30' red 31 green 32)
    local color="$1"

    printf "\033[${colors[$color]}m"
    cat
    printf "\033[0m"
}

if [ -s "${keys1}-uniq" ]; then
    echo "Only in $1:"
    indent "${keys1}-uniq" |colorize red
    echo
fi

if [ -s "${keys2}-uniq" ]; then
    echo "Only in $2:"
    indent "${keys2}-uniq" |colorize green
    echo
fi

for key in $(cat "${keys1}-common")
do
    printf "${key}" |colorize gray

    a="$(jq -r ".${key}" <"$1")"
    b="$(jq -r ".${key}" <"$2")"
   
    if [ "$a" != "$b" ]
    then
        cat <<__EOT__
:
  < $(printf "$a" |colorize red)
  > $(printf "$b" |colorize green)

__EOT__
        echo "${key}" >>${keys1}-diff
        continue  # skip printf statement below
    fi

    # erase current line ("\33[2K") and return the carriage ("\r")
    printf "\033[2K\r"
done

if [ -s "${keys1}-diff" ]
then
    echo "Identical:"
    /bin/grep -vxFf "${keys1}-diff" "${keys1}-common" |sed 's/^/  /'
fi

